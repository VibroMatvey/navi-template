// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/areas": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "Find all areas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/navi.AreaOutput"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "Create new area",
                "parameters": [
                    {
                        "description": "Area input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.AreaInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.AreaOutput"
                        }
                    }
                }
            }
        },
        "/areas/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "Update exist area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Area input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.AreaEditInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.AreaOutput"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "Remove one area by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/points": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MapPoint"
                ],
                "summary": "Find all MapPoints",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/navi.MapPointOutput"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MapPoint"
                ],
                "summary": "Create new MapPoint",
                "parameters": [
                    {
                        "description": "MapPoint input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.MapPointInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.MapPointOutput"
                        }
                    }
                }
            }
        },
        "/points/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MapPoint"
                ],
                "summary": "Update exist MapPoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MapPoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MapPoint input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.MapPointEditInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.MapPointOutput"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MapPoint"
                ],
                "summary": "Remove one MapPoint by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MapPoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/roads": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Road"
                ],
                "summary": "Find all roads",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Map ID to filter roads",
                        "name": "mapId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/navi.RoadOutput"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Road"
                ],
                "summary": "Create new road",
                "parameters": [
                    {
                        "description": "Road input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.RoadInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.RoadOutput"
                        }
                    }
                }
            }
        },
        "/roads/shortest-path": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Road"
                ],
                "summary": "Find the shortest path",
                "parameters": [
                    {
                        "description": "Road input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.ShortestPathInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/navi.Point"
                            }
                        }
                    }
                }
            }
        },
        "/roads/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Road"
                ],
                "summary": "Update exist road",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Road ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Road input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.RoadEditInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.RoadOutput"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Road"
                ],
                "summary": "Remove one road by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Road ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/terminals": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Terminal"
                ],
                "summary": "Find all Terminals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/navi.TerminalOutput"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Terminal"
                ],
                "summary": "Create new Terminal",
                "parameters": [
                    {
                        "description": "MapPoint input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.TerminalInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.TerminalOutput"
                        }
                    }
                }
            }
        },
        "/terminals/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Terminal"
                ],
                "summary": "Update exist Terminal",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Terminal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Terminal input data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/navi.TerminalEditInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/navi.TerminalOutput"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Terminal"
                ],
                "summary": "Remove one Terminal by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Terminal ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "navi.AreaEditInput": {
            "type": "object",
            "required": [
                "cords",
                "objectId"
            ],
            "properties": {
                "cords": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/navi.Point"
                        }
                    }
                },
                "objectId": {
                    "type": "string"
                }
            }
        },
        "navi.AreaInput": {
            "type": "object",
            "required": [
                "cords",
                "mapId",
                "objectId"
            ],
            "properties": {
                "cords": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/navi.Point"
                        }
                    }
                },
                "mapId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "objectId": {
                    "type": "string"
                }
            }
        },
        "navi.AreaOutput": {
            "type": "object",
            "properties": {
                "cords": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/navi.Point"
                        }
                    }
                },
                "id": {
                    "type": "integer"
                },
                "mapId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "objectId": {
                    "type": "string"
                }
            }
        },
        "navi.MapPointEditInput": {
            "type": "object",
            "required": [
                "objectId",
                "x",
                "y"
            ],
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.MapPointInput": {
            "type": "object",
            "required": [
                "mapId",
                "objectId",
                "x",
                "y"
            ],
            "properties": {
                "mapId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "objectId": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.MapPointOutput": {
            "type": "object",
            "required": [
                "mapId",
                "objectId",
                "x",
                "y"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mapId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "objectId": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.Point": {
            "type": "object",
            "required": [
                "x",
                "y"
            ],
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.RoadEditInput": {
            "type": "object",
            "required": [
                "source",
                "target"
            ],
            "properties": {
                "source": {
                    "$ref": "#/definitions/navi.Point"
                },
                "target": {
                    "$ref": "#/definitions/navi.Point"
                }
            }
        },
        "navi.RoadInput": {
            "type": "object",
            "required": [
                "mapId",
                "source",
                "target"
            ],
            "properties": {
                "mapId": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/navi.Point"
                },
                "target": {
                    "$ref": "#/definitions/navi.Point"
                }
            }
        },
        "navi.RoadOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mapId": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/navi.RoadOutputPoint"
                },
                "target": {
                    "$ref": "#/definitions/navi.RoadOutputPoint"
                }
            }
        },
        "navi.RoadOutputPoint": {
            "type": "object",
            "required": [
                "x",
                "y"
            ],
            "properties": {
                "nodeId": {
                    "type": "integer"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.ShortestPathInput": {
            "type": "object",
            "required": [
                "mapId",
                "nodeId"
            ],
            "properties": {
                "mapId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "integer"
                },
                "start": {
                    "$ref": "#/definitions/navi.Point"
                },
                "terminalId": {
                    "type": "integer"
                }
            }
        },
        "navi.TerminalEditInput": {
            "type": "object",
            "required": [
                "personPoint",
                "terminalId",
                "x",
                "y"
            ],
            "properties": {
                "personPoint": {
                    "$ref": "#/definitions/navi.Point"
                },
                "terminalId": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.TerminalInput": {
            "type": "object",
            "required": [
                "mapId",
                "personPoint",
                "terminalId",
                "x",
                "y"
            ],
            "properties": {
                "mapId": {
                    "type": "string"
                },
                "personPoint": {
                    "$ref": "#/definitions/navi.Point"
                },
                "terminalId": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "navi.TerminalOutput": {
            "type": "object",
            "required": [
                "mapId",
                "personPoint",
                "terminalId",
                "x",
                "y"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mapId": {
                    "type": "string"
                },
                "personPoint": {
                    "$ref": "#/definitions/navi.Point"
                },
                "terminalId": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/navi/api/v1",
	Schemes:          []string{},
	Title:            "Navi API service",
	Description:      "Api service for found the shortest path.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
